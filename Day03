IUserDao.xml配置
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stx.Dao.IUserDao">
    <!--    配置查询所有-->
    <select id="findAll" resultType="com.stx.domain.User">
        select * from user
    </select>
    <!--    保存用户-->
    <insert id="saveUser" parameterType="com.stx.domain.User">
        insert into user (username,address,sex,birthday) values (#{username},#{address},#{sex},#{birthday})
    </insert>
    <!--   更新用户 -->
    <update id="updateUser" parameterType="com.stx.domain.User">
        update user set username=#{username},address=#{address},birthday=#{birthday} where id=#{id}
    </update>
    <!--    删除用户-->
    <delete id="deleteUser" parameterType="Integer">
        delete from user where id=#{uid}
    </delete>
</mapper>

接口：
//用户的持久层接口
public interface IUserDao {

    //查询所有操作
    List<User> findAll();
    //保存用户
    void saveUser(User user);
    //更新操作
    void updateUser(User user);
    //根据id删除用户
    void deleteUser(Integer userId);
}

测试类代码：
public class MybatisTest {

    private InputStream in;
    private SqlSession sqlSession;
    private IUserDao userDao;

    @Before//用于在测试执行之前执行
    public void init() throws Exception {
        //1.读取配置文件
        in = Resources.getResourceAsStream("SqlMapConfig.xml");
        //2.创建SqlSessionFactory工厂
        SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(in);
        //3.使用工厂生产SqlSession对象
        sqlSession = factory.openSession();
        //4.使用SqlSession创建Dao代理对象
        userDao = sqlSession.getMapper(IUserDao.class);
    }

    @After//用于在测试方法执行之后执行
    public void destroy() throws Exception {
        //提交事务
        sqlSession.commit();
        //6.释放资源
        sqlSession.close();
        in.close();
    }

    //查询所有
    @Test
    public void testFindAll() {
        List<User> users = userDao.findAll();
        for (User user : users) {
            System.out.println(user);
        }

    }

    // 测试保存
    @Test
    public void testSave() {
        User user = new User();
        user.setUsername("小黑");
        user.setAddress("北京市顺义区");
        user.setSex("男");
        user.setBirthday(new Date());

        user.setUsername("小白");
        user.setAddress("北京市");
        user.setSex("女");
        user.setBirthday(new Date());

        userDao.saveUser(user);
    }
    //更新操作
    @Test
    public void testUpdate(){
        User user = new User();
        user.setId(51);
        user.setUsername("小白");
        user.setAddress("北京市北京区");
        user.setSex("女");
        userDao.updateUser(user);
    }
//删除操作
    @Test
    public void deleteUser(){
       userDao.deleteUser(50);
    }
}
